Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    ELSE
    FALSE
    IF
    PRINT
    RETURN
    TRUE
    WHILE
    punto

Grammar

Rule 0     S' -> for_loop
Rule 1     for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER
Rule 2     statement -> SYSTEMOUT PARIZQ cadena suma identificador PARDER puntoycoma

Terminals, with rules where they appear

BREAK                : 
ELSE                 : 
FALSE                : 
FOR                  : 1
IF                   : 
INT                  : 1
LLADER               : 1
LLAIZQ               : 1
PARDER               : 1 2
PARIZQ               : 1 2
PRINT                : 
RETURN               : 
SYSTEMOUT            : 2
TRUE                 : 
WHILE                : 
cadena               : 2
entero               : 1 1
error                : 
identificador        : 1 1 1 2
igual                : 1
mayorigual           : 1
punto                : 
puntoycoma           : 1 1 2
suma                 : 1 1 2

Nonterminals, with rules where they appear

for_loop             : 0
statement            : 1

Parsing method: LALR

state 0

    (0) S' -> . for_loop
    (1) for_loop -> . FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    FOR             shift and go to state 2

    for_loop                       shift and go to state 1

state 1

    (0) S' -> for_loop .



state 2

    (1) for_loop -> FOR . PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    PARIZQ          shift and go to state 3


state 3

    (1) for_loop -> FOR PARIZQ . INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    INT             shift and go to state 4


state 4

    (1) for_loop -> FOR PARIZQ INT . identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    identificador   shift and go to state 5


state 5

    (1) for_loop -> FOR PARIZQ INT identificador . igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    igual           shift and go to state 6


state 6

    (1) for_loop -> FOR PARIZQ INT identificador igual . entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    entero          shift and go to state 7


state 7

    (1) for_loop -> FOR PARIZQ INT identificador igual entero . puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    puntoycoma      shift and go to state 8


state 8

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma . identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    identificador   shift and go to state 9


state 9

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador . mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    mayorigual      shift and go to state 10


state 10

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual . entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    entero          shift and go to state 11


state 11

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero . puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER

    puntoycoma      shift and go to state 12


state 12

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma . identificador suma suma PARDER LLAIZQ statement LLADER

    identificador   shift and go to state 13


state 13

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador . suma suma PARDER LLAIZQ statement LLADER

    suma            shift and go to state 14


state 14

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma . suma PARDER LLAIZQ statement LLADER

    suma            shift and go to state 15


state 15

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma . PARDER LLAIZQ statement LLADER

    PARDER          shift and go to state 16


state 16

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER . LLAIZQ statement LLADER

    LLAIZQ          shift and go to state 17


state 17

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ . statement LLADER
    (2) statement -> . SYSTEMOUT PARIZQ cadena suma identificador PARDER puntoycoma

    SYSTEMOUT       shift and go to state 19

    statement                      shift and go to state 18

state 18

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement . LLADER

    LLADER          shift and go to state 20


state 19

    (2) statement -> SYSTEMOUT . PARIZQ cadena suma identificador PARDER puntoycoma

    PARIZQ          shift and go to state 21


state 20

    (1) for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER .

    $end            reduce using rule 1 (for_loop -> FOR PARIZQ INT identificador igual entero puntoycoma identificador mayorigual entero puntoycoma identificador suma suma PARDER LLAIZQ statement LLADER .)


state 21

    (2) statement -> SYSTEMOUT PARIZQ . cadena suma identificador PARDER puntoycoma

    cadena          shift and go to state 22


state 22

    (2) statement -> SYSTEMOUT PARIZQ cadena . suma identificador PARDER puntoycoma

    suma            shift and go to state 23


state 23

    (2) statement -> SYSTEMOUT PARIZQ cadena suma . identificador PARDER puntoycoma

    identificador   shift and go to state 24


state 24

    (2) statement -> SYSTEMOUT PARIZQ cadena suma identificador . PARDER puntoycoma

    PARDER          shift and go to state 25


state 25

    (2) statement -> SYSTEMOUT PARIZQ cadena suma identificador PARDER . puntoycoma

    puntoycoma      shift and go to state 26


state 26

    (2) statement -> SYSTEMOUT PARIZQ cadena suma identificador PARDER puntoycoma .

    LLADER          reduce using rule 2 (statement -> SYSTEMOUT PARIZQ cadena suma identificador PARDER puntoycoma .)

